{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItems.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItems","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAIVC,mBAAS,IAJC,mBAIvCC,EAJuC,KAI3BC,EAJ2B,KAyB9C,OAII,sBACKC,SAnBY,SAACC,GAElBA,EAAEC,iBAGEJ,EAAWK,OAAS,IAEpBP,GAAc,SAAAQ,GAAI,OAAKN,GAAL,mBAAoBM,OACtCL,EAAc,MAUlB,SAGA,uBACMM,KAAO,OACbC,MAAUR,EACVS,SA7BsB,SAACN,GAEvBF,EAAcE,EAAEO,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEkCC,UAAUH,GAF5C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAKD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EAErB,MAAO,CAEHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAZtB,kBAgBZM,GAhBY,4CAAH,sDCAPO,EAAe,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGlC,OADAc,QAAQC,IAAIL,EAAOV,GAIf,sBAAKgB,UAAY,6CAAjB,UACA,qBAAKC,IAAQjB,EACbkB,IAAQR,IAFR,IAGG,kCAAMA,EAAN,WCNES,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAGZb,mBAAS,CAE/BoB,KAAM,GACNe,SAAS,IANyB,mBAG/BC,EAH+B,KAGxBC,EAHwB,KAgCtC,OAtBAC,qBAAU,WAEN1B,EAAQC,GACH0B,MAAK,SAAAC,GAKFH,EAAS,CAELjB,KAAMoB,EACNL,SAAS,SAOtB,CAACtB,IAIGuB,ED1BsBK,CAAa5B,GAA9Ba,EALyB,EAK9BN,KAAYe,EALkB,EAKlBA,QAcnB,OAEI,qCACA,qBAAIJ,UAAU,yCAAd,cAA0DlB,EAA1D,OACCsB,GAAS,mBAAGJ,UAAU,mCAAb,yBAGV,8BAGD,oBAAIA,UAAU,YAAd,SAECL,EAAOJ,KAAI,SAACC,GAAD,OAGZ,cAAC,EAAD,aAGAA,IAAKA,GACDA,GAFCA,EAAIC,eEpCHkB,EAAe,WAAM,MAIM1C,mBAAS,CAAC,cAJhB,mBAIvB2C,EAJuB,KAIX5C,EAJW,KAe9B,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BAIM4C,EAAWrB,KAAI,SAAAT,GAAQ,OAEvB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MC3BvB+B,IAASC,OAEL,cAAC,EAAD,IAECC,SAASC,eAAe,W","file":"static/js/main.522b9536.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        //setCategories;\r\n\r\n        if (inputValue.length > 2) {\r\n\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n\r\n\r\n\r\n        <\r\n        form onSubmit = { handleSubmit } >\r\n\r\n        <\r\n        input type = \"text\"\r\n        value = { inputValue }\r\n        onChange = { handleInputChange }\r\n\r\n\r\n        /> \r\n\r\n        <\r\n        /form>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async(category)=>{\r\n     \r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=vyIeVaUO31vVRVOnUUiSpe2vkcXgFXVB`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs=data.map(img=>{\r\n\r\n        return {\r\n\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n   }","import React from 'react'\r\n\r\nexport const GifGridItems = ({ title, url }) => {\r\n\r\n    console.log(title, url);\r\n    return (\r\n\r\n\r\n        <div className = \"card animate__animated animate__fadeInLeft\" >\r\n        <img src = { url }\r\n        alt = { title }\r\n        /> <p> { title } </p> \r\n        </div>\r\n    )\r\n}","// import React, { useState,useEffect } from 'react'\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItems } from './GifGridItems';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    \r\n    // const [images, setImages] = useState([]);\r\n\r\n    const {data:images,loading}= useFetchGifs(category);\r\n\r\n  \r\n\r\n    // useEffect(()=>{\r\n       \r\n    //     getGifs(category)\r\n    //            .then(setImages);\r\n\r\n    // },[category]);\r\n\r\n   \r\n\r\n\r\n    return (\r\n\r\n        <>\r\n        <h3 className='animate__animated animate__fadeInRight'> { category } </h3>\r\n        {loading&&<p className='animate__animated animate__flash'>Cargando...</p>}\r\n\r\n        \r\n        <div >\r\n\r\n        \r\n       <ol className=\"card-grid\">\r\n\r\n      { images.map((img)=>(\r\n\r\n              \r\n       <GifGridItems \r\n       \r\n       key={img.id}\r\n       img={img}\r\n       {...img}\r\n       />\r\n\r\n\r\n\r\n      ))}\r\n\r\n       </ol>\r\n\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n\r\n    const [state, setstate] = useState({\r\n\r\n        data: [],\r\n        loading: true\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n\r\n\r\n\r\n                setstate({\r\n\r\n                    data: imgs,\r\n                    loading: false\r\n\r\n                });\r\n\r\n\r\n            })\r\n\r\n    }, [category]);\r\n\r\n\r\n\r\n    return state; //{data:[],loading:true}\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories=['One punch','Samurai x','Dragon ball'];\r\n\r\n    const [categories, setCategories] = useState(['Samurai X']);\r\n\r\n    // const handle=()=>{\r\n\r\n    //     //setcategories([...categories,'Stein Gate']);\r\n    //    // Otra forma:\r\n\r\n    //    setcategories(cats=>[...cats,'Stein Gate']);\r\n    // }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2 > GifExpertApp </h2>\r\n            <AddCategory setCategories={setCategories}/> \r\n            <hr/>\r\n\r\n           \r\n\r\n            <ol>\r\n\r\n                {\r\n                  \r\n                  categories.map(category=> (\r\n\r\n                  <GifGrid \r\n                  key={category}\r\n                  category={category}/>\r\n                  \r\n                  ))\r\n\r\n\r\n                }\r\n            </ol>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\n\nReactDOM.render(\n\n    <GifExpertApp/ > ,\n\n     document.getElementById('root')\n);"],"sourceRoot":""}